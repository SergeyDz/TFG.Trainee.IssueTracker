16.10.2015 
11:32
----- C:\Projects\git\TFG.Trainee.IssueTracker\Documents\Lessons\SQL\06.FullStack.DB\00.DDL.CreateDatabase.sql ----- 
use master

IF  EXISTS (SELECT name FROM sys.databases WHERE name = N'Test')
begin
-- magic to disconnewct connections
alter database [Test] set single_user with rollback immediate

DROP DATABASE [Test]
end


/****** Object:  Database [Test]    Script Date: 12.10.2015 10:15:39 ******/
CREATE DATABASE [Test]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'Test', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\Test.mdf' , SIZE = 3072KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'Test_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\Test_log.ldf' , SIZE = 1024KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)

----- C:\Projects\git\TFG.Trainee.IssueTracker\Documents\Lessons\SQL\06.FullStack.DB\01.DDL.CreateSchemas.sql ----- 
create schema Common 

create schema Request

create schema Domain

----- C:\Projects\git\TFG.Trainee.IssueTracker\Documents\Lessons\SQL\06.FullStack.DB\02.DDL.CreateUser.sql ----- 
create table [Common].[User] 
(
	Id int identity(1,1) not null primary key,
	Login nvarchar(255) not null unique,
	Name nvarchar(255) not null,

	-- IAuditable 
	CreatedOn datetime2 not null default GETUTCDATE(),
	CreatedById int null,
	UpdatedOn datetime2 null,
	UpdatedById int null
)


alter table Common.[User] 
	add constraint FK_User_CreatedById foreign key (CreatedById )
	references [Common].[User] (Id)


alter table Common.[User] 
	add constraint FK_User_UpdatedById foreign key (UpdatedById)
	references [Common].[User] (Id)
----- C:\Projects\git\TFG.Trainee.IssueTracker\Documents\Lessons\SQL\06.FullStack.DB\03.DDL.CreateDepartment.sql ----- 
create table [Domain].[Department] 
(
	Id int identity(1,1) not null primary key,
	Code nvarchar(255) not null unique,
	Name nvarchar(255) not null,

	-- IAuditable 
	CreatedOn datetime2 not null default GETUTCDATE(),
	CreatedById int not null,
	UpdatedOn datetime2 null,
	UpdatedById int null, 
	foreign key (CreatedById)	references [Common].[User] (Id),
	foreign key (UpdatedById)	references [Common].[User] (Id)
)

----- C:\Projects\git\TFG.Trainee.IssueTracker\Documents\Lessons\SQL\06.FullStack.DB\03.DDL.CreateOffice.sql ----- 
create table [Domain].[Office] 
(
	Id int identity(1,1) not null primary key,
	Code nvarchar(255) not null unique,
	Name nvarchar(255) not null,

	-- IAuditable 
	CreatedOn datetime2 not null default GETUTCDATE(),
	CreatedById int not null,
	UpdatedOn datetime2 null,
	UpdatedById int null, 
	foreign key (CreatedById)	references [Common].[User] (Id),
	foreign key (UpdatedById)	references [Common].[User] (Id)
)

----- C:\Projects\git\TFG.Trainee.IssueTracker\Documents\Lessons\SQL\06.FullStack.DB\03.DDL.CreatePosition.sql ----- 
create table [Domain].[Position] 
(
	Id int identity(1,1) not null primary key,
	Code nvarchar(255) not null unique,
	Name nvarchar(255) not null,

	-- IAuditable 
	CreatedOn datetime2 not null default GETUTCDATE(),
	CreatedById int not null,
	UpdatedOn datetime2 null,
	UpdatedById int null, 
	foreign key (CreatedById)	references [Common].[User] (Id),
	foreign key (UpdatedById)	references [Common].[User] (Id)
)

----- C:\Projects\git\TFG.Trainee.IssueTracker\Documents\Lessons\SQL\06.FullStack.DB\03.DDL.CreateRelation.sql ----- 
create table [Domain].[Relation] 
(
	Id int identity(1,1) not null primary key,
	Code nvarchar(255) not null unique,
	Name nvarchar(255) not null,

	-- IAuditable 
	CreatedOn datetime2 not null default GETUTCDATE(),
	CreatedById int not null,
	UpdatedOn datetime2 null,
	UpdatedById int null, 
	foreign key (CreatedById)	references [Common].[User] (Id),
	foreign key (UpdatedById)	references [Common].[User] (Id)
)

----- C:\Projects\git\TFG.Trainee.IssueTracker\Documents\Lessons\SQL\06.FullStack.DB\05.DDL.CreateClient.sql ----- 
create table [Request].[Client] 
(
	Id int identity(1,1) not null primary key,
	Name nvarchar(255) not null,
	Code nvarchar(255) null unique,

	-- IAuditable 
	CreatedOn datetime2 not null default GETUTCDATE(),
	CreatedById int not null,
	UpdatedOn datetime2 null,
	UpdatedById int null, 

	foreign key (CreatedById)	references [Common].[User] (Id),
	foreign key (UpdatedById)	references [Common].[User] (Id)
)

----- C:\Projects\git\TFG.Trainee.IssueTracker\Documents\Lessons\SQL\06.FullStack.DB\05.DDL.CreateMatter.sql ----- 
create table [Request].[Matter] 
(
	Id int identity(1,1) not null primary key,
	Name nvarchar(255) not null,
	Code nvarchar(255) null unique,

	-- IAuditable 
	CreatedOn datetime2 not null default GETUTCDATE(),
	CreatedById int not null,
	UpdatedOn datetime2 null,
	UpdatedById int null, 

	foreign key (CreatedById)	references [Common].[User] (Id),
	foreign key (UpdatedById)	references [Common].[User] (Id)
)

----- C:\Projects\git\TFG.Trainee.IssueTracker\Documents\Lessons\SQL\06.FullStack.DB\06.DDL.CreateRequest.sql ----- 
create table [Request].[Request] 
(
	Id int identity(1,1) not null primary key,
	Name nvarchar(255) not null,
	Step nvarchar(255) null,
	OfficeId int null,
	DepartmentId int null,
	ClientId int not null,
	MatterId int not null,

	-- IAuditable 
	CreatedOn datetime2 not null default GETUTCDATE(),
	CreatedById int not null,
	UpdatedOn datetime2 null,
	UpdatedById int null, 


	foreign key (OfficeId)	references [Domain].[Office] (Id),
	foreign key (DepartmentId)	references [Domain].[Department] (Id),

	foreign key (CreatedById)	references [Common].[User] (Id),
	foreign key (UpdatedById)	references [Common].[User] (Id),

	foreign key (ClientId)	references [Request].[Client] (Id),
	foreign key (MatterId)	references [Request].[Matter] (Id)
)

----- C:\Projects\git\TFG.Trainee.IssueTracker\Documents\Lessons\SQL\06.FullStack.DB\07.DDL.CreateParty.sql ----- 
create table [Request].[Party] 
(
	Id int identity(1,1) not null primary key,
	Name nvarchar(255) not null,
	RelationId int null,
	PositionId int null,

	-- IAuditable 
	CreatedOn datetime2 not null default GETUTCDATE(),
	CreatedById int not null,
	UpdatedOn datetime2 null,
	UpdatedById int null, 

	ClientId int null ,
	MatterId int null,

	foreign key (RelationId)	references [Domain].[Relation] (Id),
	foreign key (PositionId)	references [Domain].[Position] (Id),

	foreign key (ClientId)	references [Request].[Client] (Id),
	foreign key (MatterId)	references [Request].[Matter] (Id),

	foreign key (CreatedById)	references [Common].[User] (Id),
	foreign key (UpdatedById)	references [Common].[User] (Id)
)

----- C:\Projects\git\TFG.Trainee.IssueTracker\Documents\Lessons\SQL\06.FullStack.DB\00.Common.User.sql ----- 
insert Common.[User] (Login, Name) values ('Admin', 'Admin')

declare @adminid int = SCOPE_IDENTITY()

insert Common.[User] (Login, Name, CreatedById) values ('smt', 'Smith', @adminid)
insert Common.[User] (Login, Name, CreatedById) values ('jhn', 'Johnes', @adminid)
insert Common.[User] (Login, Name, CreatedById) values ('and', 'Andrey', @adminid)
insert Common.[User] (Login, Name, CreatedById) values ('srg', 'Sergey', @adminid)


(1 rows affected)

(1 rows affected)

(1 rows affected)

(1 rows affected)

(1 rows affected)
